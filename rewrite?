local commands = {}
local alias = {}
local events = {}

local function mAddCMD(cmd , data)
    table.insert(commands, data)
end

local function addcmd(cmd, _alias, callback)
    commands[cmd] = callback
    alias[_alias] = cmd
end

local function GetPlayer(Name)
	for _,v in ipairs(game.Players:GetPlayers()) do

		if string.lower(v.Name):match("^" .. string.lower(Name)) then
			return v
		end

	end
	return nil
end

local function findcommand(cmd_name)
    for i,v in pairs (commands) do
        if tostring(i) == tostring(cmd_name) then
            print("true "..i)
            return true

        else
            for index, value in pairs (alias) do
                --if value = i
            end
        end
    end
    return false
end

local function FindPlayer(PLAYERNAME)
    if PLAYERNAME == "me" then
        return game.Players.LocalPlayer.Name

    elseif PLAYERNAME == "others" then
        return 0

    elseif PLAYERNAME == "all" then
        return 1
    end
end

local function run_command(cmd)
    local command
    local arguments
    local _index = 0
    for result in string.gmatch(cmd, "%g+") do
        if _index == 0 and commands[result] then
            command = result

        elseif _index == 0 and not commands[result] then
            for i,v in pairs (alias) do
                if i == result then command = v; break end
            end

        elseif _index == 1 then
            arguments = result

        elseif _index >= 2 then
            arguments = arguments .. " " ..result
        end
        _index = _index + 1
    end

    if commands[command] then
        commands[command](arguments)
    end
end

local function _print(  )
    print(argument_string)
end

local function walkspeed( int )
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = argument_int
end

local function jumppower ( int )
    if tonumber(int) <= 0 then int = game.Players.LocalPlayer.Character.Humanoid.JumpPower end
    game.Players.LocalPlayer.Character.Humanoid.JumpPower = tonumber(int)
end

local function setmaxfps ( int )
    if setfpscap then
        setfpscap(int)
    end
end

local function antiafk ( )
    antiafk = game.Players.LocalPlayer.Idled:Connect(function()
        for i,v in pairs(getconnections(game.Players.LocalPlayer.Idled)) do
            v:Disable()
            v:Disconnect()
        end
    end)
    table.insert(events, "antiafk")
end

local function unantiafk ( )
    if events.antiafk then antiafk:Disconnect() end
end

local function spin( int )
    local BodyAngularVelocity = Instance.new( "BodyAngularVelocity" )
    BodyAngularVelocity.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
    BodyAngularVelocity.AngularVelocity = Vector3.new( 0, tonumber( int ), 0 )
    BodyAngularVelocity.MaxTorque = Vector3.new( 0, math.huge, 0 )
    table.insert( events, "BodyAngularVelocity" )
end

local function unspin ( )
    if events.BodyAngularVelocity then game.Players.LocalPlayer.Character.HumanoidRootPart.BodyAngularVelocity:Destroy() end
end

local function clearevents ( )
    table.clear(events)
end

-- // commands

addcmd ( "print", "p", _print )
addcmd ( "speed", "ws" , walkspeed )
addcmd ( "jumppower", "jpp",  jumppower)
addcmd ( "setmaxfps", "mfps",  setmaxfps)
addcmd ( "antiafk", "aa", antiafk )
addcmd ( "unantiafk", "unaa", unantiafk )
addcmd ( "spin", "sp", spin )
addcmd ( "unspin", "unsp", unspin )
addcmd ( "clearevents", "ce", clearevents )

-- // commands
